{"version":3,"sources":["components/Filter/Filter.module.css","components/Contacts.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","redux/contacts/Actions.js","components/Contacts.js","App.js","redux/contacts/contactsReducer.js","redux/RootReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","id","uuid","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styles","form","this","title","onChange","type","pattern","required","btn","Component","Filter","filter","block","htmlFor","input","ContactsListItem","item","handleDelete","textContent","onClick","ContactsList","items","ul","map","addNewToList","createAction","deletedItem","filterChange","payload","Contacts","prevState","term","some","alert","newTodo","console","log","localStorage","getItem","parsedItems","JSON","parse","prevProps","setItem","stringify","titleContact","mapDispatch","connect","contacts","formattedFilter","toLowerCase","trim","includes","App","contactsReducer","createReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a60d38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__1saB7\",\"title\":\"Filter_title__1u09Z\",\"input\":\"Filter_input__7OtpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__3lW6p\",\"titleContact\":\"Contacts_titleContact__2Ksba\",\"block\":\"Contacts_block__2n0tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__1pV4o\",\"textContent\":\"ContactListItem_textContent__FPZpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__1wl-y\"};","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    id: uuid(),\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.handleSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <span className={styles.title}>Name</span>\n          <input\n            onChange={this.handleChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <span className={styles.title}>Number</span>\n          <input\n            name=\"number\"\n            type=\"tel\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <div className={styles.block}>\n      <label className={styles.title} htmlFor=\"filter\">Find contacts by name:</label>\n      <input\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        className={styles.input}\n        onChange={handleChange}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\nconst ContactsListItem = ({ item, handleDelete}) => {\n  const { name, number } = item;\n\n  return (\n    <li>\n      <div className={styles.textContent}>\n        <span>\n          {name}: {number}\n        </span>\n        <button className={styles.btn} onClick={handleDelete}>X</button>\n      </div>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;\n","import PropTypes from \"prop-types\";\nimport ContactsListItem from \"../ContactListItem/ContactListItem\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactsList = ({ items, handleDelete }) => {\n  return (\n    <>\n      <ul className={styles.ul}>\n        {items.map((item) => (\n          <ContactsListItem\n            key={item.id}\n            item={item}\n            handleDelete={() => handleDelete(item.id)}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\n    .isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewToList = createAction(\"list/addToList\");\r\nconst deletedItem = createAction(\"list/deletedItem\");\r\nconst filterChange = createAction(\"filter/filterChange\", (payload) => ({\r\n  payload: payload.target.value,\r\n}));\r\n\r\nexport { addNewToList, deletedItem, filterChange };\r\n// =====================================OLD\r\n\r\n// const ADD_TO_CONTACTS = \"contacts/addContacts\";\r\n// const REMOVE_FROM_CONTACTS = \"contacts/removeContacts\";\r\n// const FILTER_CONTACTS = \"contacts/filterContacts\";\r\n\r\n// export { ADD_TO_CONTACTS, REMOVE_FROM_CONTACTS, FILTER_CONTACTS };\r\n\r\n// const addContact = (contact) => ({\r\n//   type: ADD_TO_CONTACTS,\r\n//   payload: contact,\r\n// });\r\n\r\n// const removeContact = (id) => ({\r\n//   type: REMOVE_FROM_CONTACTS,\r\n//   payload: id,\r\n// });\r\n\r\n// const filterContacts = (payload) => ({\r\n//   type: FILTER_CONTACTS,\r\n//   payload: payload.target.value,\r\n// });\r\n\r\n// export { addContact, removeContact, filterContacts };\r\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactsList from \"./ContactList/ContactList\";\nimport styles from \"./Contacts.module.css\";\n\nimport { connect } from \"react-redux\";\nimport {\n  deletedItem,\n  addNewToList,\n  filterChange,\n} from \"../redux/contacts/Actions\";\n\nclass Contacts extends Component {\n  state = {\n    items: [],\n    filter: \"\",\n  };\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      items: prevState.items.filter((item) => item.id !== id),\n    }));\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  handleSubmit = (term) => {\n    if (!term) {\n      alert(\"Поле не может быть пустым!\");\n      return;\n    }\n\n    const isDuplicate = this.state.items.some(\n      (item) => item.name === term.name\n    );\n    if (isDuplicate) {\n      alert(\"Контакт: \" + term.name + \" уже существует \");\n      return;\n    }\n\n    const newTodo = {\n      id: uuid(),\n      name: term.name,\n      number: term.number,\n    };\n    this.props.addNewToList(newTodo);\n    // this.setState((prevState) => {\n    //   const newItems = [newTodo, ...prevState.items];\n    //   return { items: newItems };\n    // });\n  };\n\n  // =========================\n  componentDidMount() {\n    console.log(\"[componentDidMount]\");\n    const items = localStorage.getItem(\"items\");\n    if (items) {\n      const parsedItems = JSON.parse(items);\n      this.setState({ items: parsedItems });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"[componentDidUpdate]\");\n    if (prevState.items !== this.state.items) {\n      localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    }\n  }\n\n  render() {\n    // const { filter } = this.state;\n    // const formattedFilter = filter.toLowerCase().trim();\n    // const filteredItems = items.filter((item) =>\n    //   item.name.toLowerCase().includes(formattedFilter)\n    // );\n    const { items, filter } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        <h2 className={styles.titleContact}>Contacts</h2>\n        <div className={styles.block}>\n          <Filter filter={filter} handleChange={this.props.handleChange} />\n          <ContactsList items={items} handleDelete={this.props.handleDelete} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  const items = state.contacts.items;\n  const filter = state.contacts.filter;\n  console.log(filter);\n  const formattedFilter = filter.toLowerCase().trim();\n  const filteredItems = items.filter((item) =>\n    item.name.toLowerCase().includes(formattedFilter)\n  );\n  return {\n    items: filteredItems,\n    filter: state.filter,\n  };\n};\n\nconst mapDispatch = {\n  addNewToList,\n  handleDelete: deletedItem,\n  handleChange: filterChange,\n};\n\nexport default connect(mapState, mapDispatch)(Contacts);\n","import React from \"react\";\nimport Contacts from \"./components/Contacts\";\n\n\nconst App = () => {\n  return (\n    <div className=\"block\">\n      <Contacts />\n    </div>\n  );\n};\n\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewToList, deletedItem, filterChange } from \"./Actions\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst contactsReducer = createReducer(initialState, {\r\n  [addNewToList]: (state, action) => ({\r\n    ...state,\r\n    items: [action.payload, ...state.items],\r\n  }),\r\n  [deletedItem]: (state, action) => ({\r\n    ...state,\r\n    items: state.items.filter((item) => item.id !== action.payload),\r\n  }),\r\n  [filterChange]: (state, action) => ({\r\n    ...state,\r\n    filter: action.payload,\r\n  }),\r\n});\r\n\r\nexport default contactsReducer;\r\n\r\n// =====================================OLD\r\n\r\n// import {\r\n//   ADD_TO_CONTACTS,\r\n//   REMOVE_FROM_CONTACTS,\r\n//   FILTER_CONTACTS,\r\n// } from \"./Actions\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   filter: \"\",\r\n// };\r\n\r\n// const contactsReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_TO_CONTACTS:\r\n//       return { ...state, items: [action.payload, ...state.items] };\r\n\r\n//     case REMOVE_FROM_CONTACTS:\r\n//       return {\r\n//         ...state,\r\n//         items: state.items.filter((item) => item.id !== action.payload),\r\n//       };\r\n\r\n//     case FILTER_CONTACTS:\r\n//       return { ...state, filter: action.payload };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./RootReducer\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n\r\n// ===============================OLD\r\n\r\n// import { createStore } from \"redux\";\r\n// import rootReducer from \"./RootReducer\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__369do\",\"title\":\"ContactForm_title__2lToF\",\"btn\":\"ContactForm_btn__3Pxin\"};"],"sourceRoot":""}